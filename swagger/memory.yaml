openapi: 3.0.0
info:
  title: Family Memories API
  version: 1.0.0
servers:
  - url: http://localhost:5005
components:
  schemas:
    NewMemoryRequest:
      type: object
      required:
        - date
        - familyId
      properties:
        title:
          type: string
        publication:
          type: string
          description: The memory publication
        date:
          type: string
          format: date
          description: The memory date
        place:
          type: string
        isPrivate:
          type: boolean
        tags:
          type: array
          items:
            type: string
        familyId:
          type: string
          description: The memory's family id
        gallery:
          type: array
          items:
            type: string
    NewMemoryResponse:
      allOf:
        - $ref: '#/components/schemas/MemoryBase'
        - type: object
          properties:
            createdBy:
              type: string
            family:
              type: string
              description: The memory's family id
    MemoriesResponse:
      type: array
      items:
        $ref: '#/components/schemas/Memory'
    Memory:
      allOf:
        - $ref: '#/components/schemas/MemoryBase'
        - type: object
          properties:
            createdBy:
              $ref: '#/components/schemas/User'
            family:
              $ref: '#/components/schemas/Family'
    Family:
      type: object
      properties:
        _id:
          type: string
        title:
          type: string
        description:
          type: string
        color:
          type: string
        members:
          type: array
          items:
            type: string
            description: The ID of family's member
        tags:
          type: array
          items:
            type: string
          description: The family's tags
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        __v:
          type: integer
    MemoryBase:
      type: object
      properties:
        _id:
          type: string
        title:
          type: string
        publication:
          type: string
          description: The memory publication
        date:
          type: string
          format: date-time
          description: The memory date
        owner:
          type: string
          nullable: true
        place:
          type: string
          description: The memory location
        tags:
          type: array
          items:
            type: string
          description: The memory tags
        gallery:
          type: array
          items:
            type: string
            format: uri
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        __v:
          type: integer
    User:
      type: object
      properties:
        _id:
          type: string
        username:
          type: string
        email:
          type: string
        avatar:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        __v:
          type: integer
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  responses:
    UnauthorizedError:
      description: Unauthorized Error
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: Invalid token
    UncaughtError:
      description: Uncaught Error
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: Error message
paths:
  /api/memory/upload:
    post:
      summary: Upload files
      tags:
        - Memories
      description: Upload multiple files to the Cloudinary storage
      security:
        - BearerAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                gallery:
                  type: array
                  maxItems: 10
                  items:
                    type: string
                    format: binary
                  description: |
                    The files to be uploaded.
                    Allowed formats: ["jpg", "png", "mp4", "m4a", "pdf"].
                    Maximum file count: 10.
                    Maximum payload size: 5MB.
      responses:
        '200':
          description: File URLs
          content:
            application/json:
              schema:
                type: object
                properties:
                  fileUrls:
                    type: array
                    items:
                      type: string
        '400':
          description: Error - No files attached
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: No files attached
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/UncaughtError'
  /api/memory:
    post:
      summary: Create new memory
      security:
        - BearerAuth: []
      tags:
        - Memories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewMemoryRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewMemoryResponse'
        '400':
          description: Error - Invalid date
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Invalid date. The date must be in ISO 8601 format
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/UncaughtError'
  /api/memories/{familyId}:
    get:
      summary: Get all memories by family id
      tags:
        - Memories
      parameters:
        - in: path
          name: familyId
          schema:
            type: string
          required: true
          description: The ID of the family
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemoriesResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/UncaughtError'
